kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: storageos-daemon
  namespace: {{ .Values.service.namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  selector:
    matchLabels:
      app: storageos-driver
  template:
    metadata:
      name: {{ template "fullname" . }}
      labels:
        app: {{ template "name" . }}
        chart: {{ template "chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      serviceAccount: storageos-daemonset-sa
      hostPID: true
      hostNetwork: true
      {{- if .Values.rbacEnabled }}
      serviceAccountName: {{ template "fullname" . }}
      {{- end }}
      containers:
      - name: csi-driver-registrar
        image: quay.io/k8scsi/driver-registrar:v0.2.0
        args:
          - "--v=5"
          - "--csi-address=$(ADDRESS)"
        env:
          - name: ADDRESS
            value: /csi/csi.sock # plugin-dir is mounted at /csi
            # value: unix://var/lib/kubelet/plugins/storageos/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
          - name: plugin-dir
            mountPath: /csi
            # This is where kubelet.sock exists.
          - name: registrar-socket-dir
            mountPath: /var/lib/csi/sockets/
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - server
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: api
        livenessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 10
          failureThreshold: 10
          httpGet:
            path: /v1/health
            port: api
        readinessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 10
          failureThreshold: 10
          httpGet:
            path: /v1/health
            port: api
        resources:
{{ toYaml .Values.resources | indent 12 }}

        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JOIN
          value: {{ required "ERROR: add \"--set cluster.join=<first node-name/ip-address>\". See README.md for details." .Values.cluster.join }}
        - name: ADVERTISE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NAMESPACE
          value: {{ .Values.service.namespace }}
        {{- if .Values.cluster.sharedDir }}
        - name: DEVICE_DIR
          value: {{ .Values.cluster.sharedDir }}/devices
        {{- end }}
        volumeMounts:
          - name: kubelet-dir
            mountPath: /var/lib/kubelet
            mountPropagation: "Bidirectional"
          - name: plugin-dir
            mountPath: /var/lib/kubelet/plugins/storageos/
          - name: device-dir
            mountPath: /dev
          - name: fuse
            mountPath: /dev/fuse
          - name: sys
            mountPath: /sys
          - name: state
            mountPath: /var/lib/storageos
            mountPropagation: "Bidirectional"
          {{- if .Values.cluster.sharedDir }}
          - name: shared
            mountPath: {{ .Values.cluster.sharedDir }}
            mountPropagation: Bidirectional
          {{- if .Values.cluster.sharedDir }}
          - name: shared
            mountPath: {{ .Values.cluster.sharedDir }}
            mountPropagation: Bidirectional
          {{- end }}
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
      volumes:
        - name: fuse
          hostPath:
            path: /dev/fuse
        - name: sys
          hostPath:
            path: /sys
        - name: state
          hostPath:
            path: /var/lib/storageos
        {{- if .Values.cluster.sharedDir }}
        - name: shared
          hostPath:
            path: {{ .Values.cluster.sharedDir }}
        {{- end }}
